/* Uncomment and set these variables to customize the grid. */

$flexy: (
  columns: 14,
  padding: 1rem
);

@function flexy($key) {
  @if map-has-key($flexy, $key) {
    @return map-get($flexy, $key);
  }

  @warn "Unknown `#{$key}` in $flexy.";
  @return null;
}

@mixin flex-breakpoint($width) {
  @media screen and (min-width: $width) {
    @content;
  }
}

@mixin flex-container($width) {
  max-width: $width;
  box-sizing: border-box;

  margin-right: auto;
  margin-left: auto;
  padding-right: 2rem;
  padding-left: 2rem;
}

@mixin flex-row($direction: row) {
  box-sizing: border-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: -webkit-box;
  display: flex;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  -webkit-box-flex: 0;
  flex: 0 1 auto;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -1rem;
  margin-left: -1rem;

  -webkit-flex-direction: $direction;
  -ms-flex-direction: $direction;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  flex-direction: $direction;

  @if $direction == row {
    -webkit-box-direction: normal;
  } @else {
    -webkit-box-direction: reverse;
  }
}

%flex-span-basics {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  -webkit-box-flex: 0;
  flex: 0 0 auto;
  padding-right: flexy(padding);
  padding-left: flexy(padding);
}

@mixin flex-span($col) {
  @extend %flex-span-basics;

  @if $col == auto {
    -webkit-flex-grow: 1;
    -ms-flex-positive: 1;
    -webkit-box-flex: 1;
    flex-grow: 1;
    -ms-flex-preferred-size: 0;
    -webkit-flex-basis: 0;
    flex-basis: 0;
    max-width: 100%;
  } @else {
    -ms-flex-preferred-size: percentage($col/flexy(columns));
    -webkit-flex-basis: percentage($col/flexy(columns));
    flex-basis: percentage($col/flexy(columns));
    max-width: percentage($col/flexy(columns));
  }
}

@mixin flex-push($col) {
  margin-left: percentage($col/12);
}


// Still needs to be made into mixins

.start-xs {
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  -webkit-box-pack: start;
  justify-content: flex-start;
  text-align: start;
}

.center-xs {
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  -webkit-box-pack: center;
  justify-content: center;
  text-align: center;
}

.end-xs {
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  -webkit-box-pack: end;
  justify-content: flex-end;
  text-align: end;
}

.top-xs {
  -webkit-align-items: flex-start;
  -ms-flex-align: start;
  -webkit-box-align: start;
  align-items: flex-start;
}

.middle-xs {
  -webkit-align-items: center;
  -ms-flex-align: center;
  -webkit-box-align: center;
  align-items: center;
}

.bottom-xs {
  -webkit-align-items: flex-end;
  -ms-flex-align: end;
  -webkit-box-align: end;
  align-items: flex-end;
}

.around-xs {
  -webkit-justify-content: space-around;
  -ms-flex-pack: distribute;
  justify-content: space-around;
}

.between-xs {
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  -webkit-box-pack: justify;
  justify-content: space-between;
}

.first-xs {
  -webkit-order: -1;
  -ms-flex-order: -1;
  -webkit-box-ordinal-group: 0;
  order: -1;
}

.last-xs {
  -webkit-order: 1;
  -ms-flex-order: 1;
  -webkit-box-ordinal-group: 2;
  order: 1;
}